CUSTOM_MAPPER = 0

.segment "HEADER"
  .byte $4E,$45,$53,26 ; "NES" EOF

  .ifdef CHR_RAM
    .byte 2,0 ; 32K PRG, CHR RAM
  .else
    .byte 2,1 ; 32K PRG, 8K CHR
  .endif

  .byte CUSTOM_MAPPER*$10+$01 ; vertical mirroring

.segment "VECTORS"
  .word 255,255,255, nmi, reset, irq

.segment "CODE"
  .res $4000


A1 = 0
B1 = 2
C2 = 3
D2 = 5
E2 = 7
F2 = 8
G2 = 10
A2 = 12
B2 = 14
C3 = 15
D3 = 17
E3 = 19
F3 = 20

notes:
  .byte A2,A2,C3,E3,F3,F3,C3,F3
  .byte E3,E3,C3,E3,D3,D3,C3,B2
  .byte A2,A2,C3,E3,F3,F3,C3,F3
  .byte E3,E3,C3,E3,D3,D3,C3,B2

silence:
  .byte 0,1,0,0,0,1,0,0
  .byte 0,1,0,0,0,1,0,0
  .byte 0,1,0,0,0,1,0,0
  .byte 0,1,0,0,0,1,0,0

NOTE_LENGTH = 16 * 1

reset:
  SEI
  JMP run

run:
  jsr init_apu

  ldy #20
  jsr delay_y_frames

  lda #0
  sta $80

: ldy $80
  lda notes,y
  tax
  lda silence,y
  bne skip_note
  jsr play_pulse_note
  jmp next_note
skip_note:
  jsr play_silence
next_note:
  inc $80
  lda $80
  sbc #NOTE_LENGTH
  bne :-

JUMP: JMP JUMP

nmi:
  RTI

irq:
  RTI

; Delays 1/60 second
delay_frame:
  ; delay 29816
  lda #67
: pha
  lda #86
  lsr a
  sec
: sbc #1
  bne :-
  pla
  sbc #1
  bne :--
  rts

; Delays Y/60 second
delay_y_frames:
: jsr delay_frame
  dey
  bne :-
  rts

init_apu:
  ; Init $4000-4013
  ldy #$13
@loop:
  lda @regs,y
  sta $4000,y
  dey
  bpl @loop

  ; We have to skip over $4014 (OAMDMA)
  lda #$0f
  sta $4015
  lda #$40
  sta $4017

  rts

@regs:
  .byte $30,$08,$00,$00
  .byte $30,$08,$00,$00
  .byte $80,$00,$00,$00
  .byte $30,$00,$00,$00
  .byte $00,$00,$00,$00

play_pulse_note:
  lda periodTableHi,x
  sta $4003

  lda periodTableLo,x
  sta $4002

  ; Fade volume from 15 to 0
  ldy #15
: tya
  ora #%10110000
  sta $4000
  jsr delay_frame
  dey
  bpl :-

  rts

play_pulse2_note:
  lda periodTableHi,x
  sta $4003+4

  lda periodTableLo,x
  sta $4002+4

  ; Fade volume from 15 to 0
  ldy #15
: tya
  ora #%10110000
  sta $4000+4
  jsr delay_frame
  dey
  bpl :-

  rts

play_silence:
  ldy #15
: jsr delay_frame
  dey
  bpl :-

  rts

; NTSC period table generated by mktables.py
periodTableLo:
  .byte $f1,$7f,$13,$ad,$4d,$f3,$9d,$4c,$00,$b8,$74,$34
  .byte $f8,$bf,$89,$56,$26,$f9,$ce,$a6,$80,$5c,$3a,$1a
  .byte $fb,$df,$c4,$ab,$93,$7c,$67,$52,$3f,$2d,$1c,$0c
  .byte $fd,$ef,$e1,$d5,$c9,$bd,$b3,$a9,$9f,$96,$8e,$86
  .byte $7e,$77,$70,$6a,$64,$5e,$59,$54,$4f,$4b,$46,$42
  .byte $3f,$3b,$38,$34,$31,$2f,$2c,$29,$27,$25,$23,$21
  .byte $1f,$1d,$1b,$1a,$18,$17,$15,$14

periodTableHi:
  .byte $07,$07,$07,$06,$06,$05,$05,$05,$05,$04,$04,$04
  .byte $03,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$02
  .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
  .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  .byte $00,$00,$00,$00,$00,$00,$00,$00
